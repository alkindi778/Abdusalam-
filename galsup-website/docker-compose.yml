version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: galsup-website:latest
    container_name: galsup-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./storage:/var/www/html/storage
    networks:
      - galsup-network
    depends_on:
      - db
      - redis
    environment:
      - APP_NAME=GALSUP
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=galsup
      - DB_USERNAME=galsup_user
      - DB_PASSWORD=secure_password
      - REDIS_HOST=redis
      - REDIS_PASSWORD=null
      - REDIS_PORT=6379

  db:
    image: mysql:8.0
    container_name: galsup-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: galsup
      MYSQL_USER: galsup_user
      MYSQL_PASSWORD: secure_password
      MYSQL_ROOT_PASSWORD: root_password
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - galsup-network
    ports:
      - "3306:3306"

  redis:
    image: redis:7-alpine
    container_name: galsup-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - galsup-network

  nginx:
    image: nginx:alpine
    container_name: galsup-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./public:/var/www/html/public
    depends_on:
      - app
    networks:
      - galsup-network

volumes:
  dbdata:
    driver: local
  redis_data:
    driver: local

networks:
  galsup-network:
    driver: bridge